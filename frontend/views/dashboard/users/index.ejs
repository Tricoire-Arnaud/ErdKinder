<%- contentFor('body') %>

<div class="min-h-screen bg-secondary">
    <div class="flex">
        <%- include('../../partials/dashboard-sidebar') %>

        <main class="flex-1 p-8">
            <header class="flex justify-between items-center mb-8">
                <h1 class="text-3xl font-bold text-text">Gestion des Utilisateurs</h1>
                <button onclick="openNewUserModal()"
                        class="inline-flex items-center px-4 py-2 bg-primary text-white rounded-lg hover:bg-accent transition-colors">
                    <i class="fas fa-plus mr-2"></i>
                    Nouvel utilisateur
                </button>
            </header>

            <div class="bg-white rounded-lg shadow-lg">
                <div class="overflow-x-auto">
                    <table class="w-full">
                        <thead class="bg-gray-50">
                            <tr>
                                <th class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">
                                    Nom
                                </th>
                                <th class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">
                                    Email
                                </th>
                                <th class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">
                                    Rôle
                                </th>
                                <th class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">
                                    Date d'inscription
                                </th>
                                <th class="px-6 py-3 text-right text-xs font-medium text-gray-500 uppercase tracking-wider">
                                    Actions
                                </th>
                            </tr>
                        </thead>
                        <tbody class="divide-y divide-gray-200">
                            <% users.forEach(user => { %>
                                <tr>
                                    <td class="px-6 py-4 whitespace-nowrap">
                                        <div class="text-sm font-medium text-text">
                                            <%= user.name %>
                                        </div>
                                    </td>
                                    <td class="px-6 py-4 whitespace-nowrap">
                                        <div class="text-sm text-gray-500">
                                            <%= user.email %>
                                        </div>
                                    </td>
                                    <td class="px-6 py-4 whitespace-nowrap">
                                        <span class="px-2 py-1 text-xs rounded-full
                                            <%= user.role === 'admin' ? 'bg-primary text-white' : 'bg-gray-100 text-gray-800' %>">
                                            <%= user.role %>
                                        </span>
                                    </td>
                                    <td class="px-6 py-4 whitespace-nowrap">
                                        <div class="text-sm text-gray-500">
                                            <%= new Date(user.createdAt).toLocaleDateString('fr-FR') %>
                                        </div>
                                    </td>
                                    <td class="px-6 py-4 whitespace-nowrap text-right text-sm font-medium">
                                        <button onclick="editUser('<%= user.id %>')"
                                                class="text-primary hover:text-accent mr-3">
                                            <i class="fas fa-edit"></i>
                                        </button>
                                        <button onclick="deleteUser('<%= user.id %>')"
                                                class="text-red-600 hover:text-red-800">
                                            <i class="fas fa-trash"></i>
                                        </button>
                                    </td>
                                </tr>
                            <% }) %>
                        </tbody>
                    </table>
                </div>
            </div>
        </main>
    </div>
</div>

<!-- Modal pour nouveau/édition utilisateur -->
<div id="userModal" class="hidden fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center">
    <div class="bg-white rounded-lg w-full max-w-md p-6">
        <h2 class="text-xl font-bold mb-4" id="modalTitle">Nouvel utilisateur</h2>
        <form id="userForm" class="space-y-4">
            <div>
                <label class="block text-sm font-medium text-text mb-1">Nom</label>
                <input type="text" name="name" required
                       class="w-full rounded-lg border-gray-300 focus:ring-primary focus:border-primary">
            </div>
            <div>
                <label class="block text-sm font-medium text-text mb-1">Email</label>
                <input type="email" name="email" required
                       class="w-full rounded-lg border-gray-300 focus:ring-primary focus:border-primary">
            </div>
            <div>
                <label class="block text-sm font-medium text-text mb-1">Mot de passe</label>
                <input type="password" name="password" required
                       class="w-full rounded-lg border-gray-300 focus:ring-primary focus:border-primary">
            </div>
            <div>
                <label class="block text-sm font-medium text-text mb-1">Rôle</label>
                <select name="role"
                        class="w-full rounded-lg border-gray-300 focus:ring-primary focus:border-primary">
                    <option value="user">Utilisateur</option>
                    <option value="admin">Administrateur</option>
                </select>
            </div>
            <div class="flex justify-end gap-3 mt-6">
                <button type="button" onclick="closeUserModal()"
                        class="px-4 py-2 text-gray-600 hover:text-gray-800">
                    Annuler
                </button>
                <button type="submit"
                        class="px-4 py-2 bg-primary text-white rounded-lg hover:bg-accent transition-colors">
                    Enregistrer
                </button>
            </div>
        </form>
    </div>
</div>

<%- contentFor('extraScripts') %>
<script>
const userModal = document.getElementById('userModal');
const userForm = document.getElementById('userForm');
let editingUserId = null;

function openNewUserModal() {
    editingUserId = null;
    document.getElementById('modalTitle').textContent = 'Nouvel utilisateur';
    userForm.reset();
    userModal.classList.remove('hidden');
}

function closeUserModal() {
    userModal.classList.add('hidden');
}

async function editUser(userId) {
    editingUserId = userId;
    document.getElementById('modalTitle').textContent = 'Modifier l\'utilisateur';
    
    try {
        const response = await fetch(`/dashboard/users/${userId}`);
        const user = await response.json();
        
        userForm.elements.name.value = user.name;
        userForm.elements.email.value = user.email;
        userForm.elements.role.value = user.role;
        userForm.elements.password.required = false;
        
        userModal.classList.remove('hidden');
    } catch (error) {
        console.error('Erreur:', error);
    }
}

async function deleteUser(userId) {
    if (confirm('Êtes-vous sûr de vouloir supprimer cet utilisateur ?')) {
        try {
            const response = await fetch(`/dashboard/users/${userId}`, {
                method: 'DELETE'
            });
            
            if (response.ok) {
                window.location.reload();
            }
        } catch (error) {
            console.error('Erreur:', error);
        }
    }
}

userForm.addEventListener('submit', async (e) => {
    e.preventDefault();
    const formData = new FormData(userForm);
    const data = Object.fromEntries(formData);
    
    try {
        const response = await fetch(editingUserId ? `/dashboard/users/${editingUserId}` : '/dashboard/users', {
            method: editingUserId ? 'PUT' : 'POST',
            headers: {
                'Content-Type': 'application/json'
            },
            body: JSON.stringify(data)
        });
        
        if (response.ok) {
            window.location.reload();
        }
    } catch (error) {
        console.error('Erreur:', error);
    }
});
</script> 